#!/usr/bin/zsh


if ! type "arthur" > /dev/null; then
    echo "Command 'arthur' not found"
    exit 1
fi

if ! type "psql" > /dev/null; then
    echo "Command 'psql' not found"
    exit 1
fi

function help() {
    echo "dbi SERVICE ENVIRONMENT [COMMAND]"
    echo ""
    echo "Example:"
    echo "  dbi george staging"
    echo ""
    echo "Command:"
    echo "  --arthur (default)"
    echo "      Connect to database via arthur PSQL. Uses your AWS credentials to login."
    echo "      Read-only mode is active by default, if you need write access there is two options"
    echo "        1. Use param '--readwrite' when connecting"
    echo "        2. Set your role after connecting with 'set role readwrite'"
    echo "  --url"
    echo "      Print postgres connection url."
    echo "      URL is valid for 15 min, but once connected your session is valid until you disconnect."
    echo "      Example output 'postgres://user:pass@host:port/db'"
    echo "  --readwrite | --rw"
    echo "      Connect to the database with read and write access."
    echo "  --root"
    echo "      Connect to database as root user. Don't use this as default."

}

if [[ "$1" == "local" ]]; then
    echo "Connecting to localhost server"
    psql postgres://postgres:postgres@localhost:5432
    exit
fi

SERVICE=$1
ENVIRONMENT=$2
COMMAND=${3:-}

[[ "$SERVICE" == "" ]] && help && exit 1
[[ "$ENVIRONMENT" == "" ]] && help && exit 1

case $ENVIRONMENT in
    "staging")
        ;;
    "sandbox")
        ;;
    "production")
        ;;
    *)
        echo "Invalid [ENVIRONMENT], most be either 'staging', 'sandbox' or 'production'"
        exit 1
esac

case $COMMAND in
    "")
        ;&
    "--arthur")
        arthur psql $SERVICE-$ENVIRONMENT || echo "Invalid or unspported [SERVICE]" && exit 1
        exit
        ;;
    "--url")
        URL=$(arthur db-connection-url $SERVICE-$ENVIRONMENT)
        echo $URL
        exit
        ;;
    "--rw")
        ;&
    "--readwrite")
        arthur psql $SERVICE-$ENVIRONMENT --readwrite || echo "Invalid or unspported [SERVICE]" && exit 1
        ;;
    "--root")
        arthur psql $SERVICE-$ENVIRONMENT --root || echo "Invalid or unspported [SERVICE]" && exit 1
        exit
        ;;
    *)
        help
        exit 1
esac
